[{"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\index.js":"1","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\App.js":"2","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\past-events\\PastEvents.js":"3","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\pages\\home-page\\HomePage.js":"4","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\about\\About.js":"5","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\count-down\\CountDown.js":"6","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\nav-bar\\NavBar.js":"7","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\timeline\\Timeline.js":"8","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\timeline\\timelineElements.js":"9"},{"size":228,"mtime":1607801398647,"results":"10","hashOfConfig":"11"},{"size":175,"mtime":1607840474107,"results":"12","hashOfConfig":"11"},{"size":2066,"mtime":1607842193374,"results":"13","hashOfConfig":"11"},{"size":548,"mtime":1607844768471,"results":"14","hashOfConfig":"11"},{"size":1240,"mtime":1607840556036,"results":"15","hashOfConfig":"11"},{"size":1914,"mtime":1607840626570,"results":"16","hashOfConfig":"11"},{"size":796,"mtime":1607840940602,"results":"17","hashOfConfig":"11"},{"size":2203,"mtime":1607845213076,"results":"18","hashOfConfig":"11"},{"size":2486,"mtime":1607845074900,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"j33224",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\index.js",[],["41","42"],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\App.js",[],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\past-events\\PastEvents.js",[],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\pages\\home-page\\HomePage.js",[],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\about\\About.js",[],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\count-down\\CountDown.js",["43"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport './CountDown.css';\r\n\r\nfunction CountDown() {\r\n\tconst [timerDays, setTimerDays] = useState('00');\r\n\tconst [timerHours, setTimerHours] = useState('00');\r\n\tconst [timerMinutes, setTimerMinutes] = useState('00');\r\n\tconst [timerSeconds, setTimerSeconds] = useState('00');\r\n\r\n\tlet interval = useRef();\r\n\r\n\tconst startTimer = () => {\r\n\t\tconst countDownDate = new Date('Jan 19, 2021 00:00:00').getTime();\r\n\t\tinterval = setInterval(() => {\r\n\t\t\tconst now = new Date().getTime();\r\n\t\t\tconst distance = countDownDate - now;\r\n\t\t\tconst days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n\t\t\tconst hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n\t\t\tconst mins = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n\t\t\tconst seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n\t\t\tif (distance < 0) {\r\n\t\t\t\t// stop timer\r\n\t\t\t\tclearInterval(interval.current);\r\n\t\t\t} else {\r\n\t\t\t\t// update timer\r\n\t\t\t\tsetTimerDays(days);\r\n\t\t\t\tsetTimerHours(hours);\r\n\t\t\t\tsetTimerMinutes(mins);\r\n\t\t\t\tsetTimerSeconds(seconds);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tstartTimer();\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval.current);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"countDown\">\r\n\t\t\t<div className=\"countDown__title\">\r\n\t\t\t\t<p>TAKING ON THE WORLD OF DATA SCIENCE, ONE PITCH AT A TIME</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"countDown__time\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{timerDays}</p>\r\n\t\t\t\t\t<p>DAYS</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span>:</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{timerHours}</p>\r\n\t\t\t\t\t<p>HOURS</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span>:</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{timerMinutes}</p>\r\n\t\t\t\t\t<p>MINUTES</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span>:</span>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{timerSeconds}</p>\r\n\t\t\t\t\t<p>SECONDS</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"countDown__register\">\r\n\t\t\t\t<button>REGISTER NOW</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CountDown;\r\n","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\nav-bar\\NavBar.js",["44","45","46","47"],"import React from 'react'\r\nimport \"./NavBar.css\"\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navBar\">\r\n            <div className=\"navBar__sectionOne\">\r\n                <img src=\"https://cdn.discordapp.com/attachments/787026782787207228/787386806110257152/Asset_1.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"navBar__sectionTwo\">\r\n                <nav>\r\n                    <button><a href=\"#\">ABOUT</a></button>\r\n                    <button><a href=\"#\">ABOUT</a></button>\r\n                    <button><a href=\"#\">ABOUT</a></button>\r\n                    <button><a href=\"#\">ABOUT</a></button>\r\n                    <button className=\"navBar__login\">LOG IN</button>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\timeline\\Timeline.js",[],"C:\\Users\\Ammuuu\\Downloads\\learning\\UNI\\CodeSprint\\Website\\codesprint-site\\src\\components\\timeline\\timelineElements.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":38,"column":27,"nodeType":"54","endLine":38,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":12,"column":29,"nodeType":"57","endLine":12,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":13,"column":29,"nodeType":"57","endLine":13,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":14,"column":29,"nodeType":"57","endLine":14,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":15,"column":29,"nodeType":"57","endLine":15,"endColumn":41},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]